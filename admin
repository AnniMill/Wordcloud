# pages/1_Admin.py
import streamlit as st
import pandas as pd
import os
from wordcloud import WordCloud
import matplotlib.pyplot as plt
from io import BytesIO
from PIL import Image
import numpy as np

# 🌐 App config
st.set_page_config(page_title="Admin Panel", page_icon="🧰", layout="wide")

st.markdown("""
    <h1 style='color: #FF8C00;'>🧰 Wordcloud Admin Dashboard</h1>
    <p style='font-size:16px;'>Customize your live word cloud, download responses, and tailor the look & feel for your event.</p>
    <hr style='margin-bottom: 25px;'/>
""", unsafe_allow_html=True)

# 📂 Load submission data
file_path = "submissions.csv"
df = pd.read_csv(file_path) if os.path.exists(file_path) else pd.DataFrame()

# 📋 Response Log
st.subheader("📋 Live Responses")
if not df.empty:
    st.dataframe(df, use_container_width=True)
    st.download_button("⬇ Download All Responses (CSV)", df.to_csv(index=False), file_name="responses.csv", mime="text/csv")
else:
    st.info("No submissions yet. This panel will update automatically.")

# 🔤 Build text blob for the cloud
all_text = " ".join(df["response1"].dropna().tolist() + df["response2"].dropna().tolist())

# 🎛️ Appearance Options
st.subheader("🎨 Customize Word Cloud")

# Event theme presets
themes = {
    "Classic": {"bg": "#FFFFFF", "colormap": "viridis"},
    "Pastel Party": {"bg": "#FFF0F5", "colormap": "Pastel1"},
    "Dark Mode": {"bg": "#1E1E1E", "colormap": "plasma"}
}

col1, col2, col3 = st.columns(3)

with col1:
    theme_choice = st.selectbox("Theme Preset", list(themes.keys()), index=0)
    bg_color = st.color_picker("Background Color", themes[theme_choice]["bg"])

with col2:
    colormap = st.selectbox("Color Scheme", ["viridis", "plasma", "inferno", "magma", "cividis", "Set3", "Pastel1"], index=0)
    max_words = st.slider("Max Words", 10, 200, value=100, step=10)

with col3:
    random_seed = st.slider("Random Seed", 0, 100, 42)
    font_file = st.file_uploader("Upload .ttf Font (optional)", type=["ttf"])
    mask_file = st.file_uploader("Upload Image Mask (PNG/JPG)", type=["png", "jpg"])

# Handle file inputs
font_path = None
if font_file:
    font_path = "custom_font.ttf"
    with open(font_path, "wb") as f:
        f.write(font_file.getbuffer())

mask_array = None
if mask_file:
    image = Image.open(mask_file).convert("L")
    mask_array = np.array(image)

# 🔮 Generate and display the word cloud
st.subheader("🌥️ Live Word Cloud")

if all_text.strip():
    wc = WordCloud(
        width=800,
        height=400,
        max_words=max_words,
        background_color=bg_color,
        colormap=colormap,
        mask=mask_array,
        font_path=font_path,
        random_state=random_seed
    ).generate(all_text)

    fig, ax = plt.subplots(figsize=(10, 5))
    ax.imshow(wc, interpolation="bilinear")
    ax.axis("off")
    st.pyplot(fig)

    # 🎯 Download the image
    buffer = BytesIO()
    fig.savefig(buffer, format="png", bbox_inches="tight", pad_inches=0.1)
    buffer.seek(0)

    st.download_button("📸 Download Word Cloud (PNG)", buffer, file_name="wordcloud.png", mime="image/png")
else:
    st.warning("Once submissions are collected, the word cloud will appear here.")
